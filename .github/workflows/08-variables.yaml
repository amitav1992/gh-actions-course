name: 08- Using variables

on:
    push:
    workflow_dispatch:
env:
    WORKFLOW_VAR: 'I am a workflow var'
    OVERWRITTEN: 'I will be overwritten'
    UNDEFINED_VAR_WITH_DEFAULT: ${{ vars.UNDEFINED_VAR|| 'default value'}}
jobs:
    echo:
        runs-on: ubuntu-latest
        env:
            JOB_VAR: 'iam a job en var'
            OVERWRITTEN: 'I am overwritten at job level'
        steps:
            - name: Print Env Variables
              env:
                STEP_VAR: 'I am a step Variable'
                step_var2: 'Ia am another step Variable'
              run: |
                echo "Step Var of env : ${{env.STEP_VAR}}"
                echo "Another Step Var of Env: $step_var2"
                echo "job env var is : ${{env.JOB_VAR}}"
                echo "Workflow Var -Iam  a == : ${{env.WORKFLOW_VAR}}"
                echo "Overwiritten: ${{env.OVERWRITTEN}}"
            - name: Overwrite a job variable
              env:
                OVERWRITTEN: 'I have been overwritten at step level'
              run: |
                echo "Step Env Vars : ${{env.OVERWRITTEN}}"

    echo2:
      runs-on: ubuntu-latest
      steps:
        - name: Print variables
          run: |
            echo "ORG VAR : ${{vars.ORG_VAR}}"
            echo "Org Overwritten Var : ${{vars.OVERWRITTEN_VAR}}"
            echo "Repo Var : ${{vars.REPOSITORY_VAR}}"
            
          
    echoprod:
      runs-on: ubuntu-latest
      environment: prod
      steps:
        - name: Print Prod Variables
          run: |
            echo "ORG VAR : ${{vars.ORG_VAR}}"
            echo "Org Overwritten Var : ${{vars.OVERWRITTEN_VAR}}"
            echo "Repo Var : ${{vars.REPOSITORY_VAR}}"
            echo "Environment Var: ${{ vars.TARGET_VAR }} "

    echo-undefined:
      runs-on: ubuntu-latest
      steps:
        - name: Print undefined  variables
          run: |
            echo "ORG VAR : ${{ env.UNDEFINED_VAR_WITH_DEFAULT }}"
